{"version":3,"sources":["components/User.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["User","props","react_default","a","createElement","user","email","TodoItems","todo","title","className","completed","TodoList","align","todos","map","item","key","id","BaseUrl","getTodosWithUsers","users","_objectSpread","find","elem","userId","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getDataFromServer","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","response","wrap","_context","prev","next","fetch","concat","sent","abrupt","json","stop","_x","apply","arguments","getTodosList","_callee2","todosandUser","_context2","Promise","all","loadTodos","_callee3","_context3","setState","loading","t0","t1","t2","todosWithUsers","state","sortByTitleLength","bind","assertThisInitialized","console","log","prevState","toConsumableArray","sort","b","length","Fragment","type","onClick","components_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ef19057a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function User(props) {\n  return (\n    <td>{props.user.email}</td>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    email: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nexport default function TodoItems(props) {\n  return (\n    <tr>\n      <td>{props.todo.title}</td>\n      <td className={props.todo.completed ? 'active' : 'non-active'}>\n        {props.todo.completed ? 'true' : 'false'}\n      </td>\n      <User user={props.todo.user} />\n    </tr>\n  );\n}\n\nTodoItems.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  }).isRequired,\n};\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nfunction TodoList(props) {\n  return (\n    <table align=\"center\">\n      <thead>\n        <tr>\n          <th>title</th>\n          <th>completed</th>\n          <th>email</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          props.todos.map(item => <TodoItem todo={item} key={item.id} />)\n        }\n      </tbody>\n    </table>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\n\n// import todos from './api/todos';\n// import users from './api/users';\n\nimport TodoList from './components/TodoList';\n\nconst BaseUrl = 'https://jsonplaceholder.typicode.com/';\n\nfunction getTodosWithUsers(todos, users) {\n  return todos.map(item => ({\n    ...item,\n    user: users.find(elem => elem.id === item.userId),\n  }));\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      todosWithUsers: [],\n    };\n\n    this.sortByTitleLength = this.sortByTitleLength.bind(this);\n  }\n\n  getDataFromServer = async(url) => {\n    const response = await fetch(`${BaseUrl}${url}`);\n    return response.json();\n  };\n\n  getTodosList = async() => {\n    const todosandUser = await Promise.all([\n      this.getDataFromServer('todos'),\n      this.getDataFromServer('users'),\n    ]);\n\n    return getTodosWithUsers(todosandUser[0], todosandUser[1]);\n  };\n\n  loadTodos = async() => {\n    this.setState({\n      loading: true,\n    });\n    this.setState({\n      todosWithUsers: await this.getTodosList(),\n    });\n  }\n\n  sortByTitleLength() {\n    console.log(this.state.todosWithUsers);\n    this.setState(prevState => ({\n      todosWithUsers: [...prevState.todosWithUsers].sort(\n        (a, b) => b.title.length - a.title.length\n      ),\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <h1>Dynamic list of todos</h1>\n          {(this.state.loading && this.state.todosWithUsers.length === 0)\n            ? 'loading...' : ''\n          }\n          {(!this.state.loading && this.state.todosWithUsers.length === 0)\n            ? <button type=\"button\" onClick={this.loadTodos}>Download</button>\n            : ''\n          }\n          {this.state.todosWithUsers.length === 0\n            ? ''\n            : (\n              <>\n                <button\n                  type=\"button\"\n                  onClick={this.sortByTitleLength}\n                >\n                  sortByTitleLength\n                </button>\n                <TodoList todos={this.state.todosWithUsers} />\n              </>\n            )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}