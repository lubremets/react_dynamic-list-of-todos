{"version":3,"sources":["components/User.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["User","props","react_default","a","createElement","user","email","TodoItems","todo","title","className","completed","TodoList","_ref","todos","sortTableBy","align","type","onClick","map","item","key","id","BaseUrl","getTodosWithUsers","users","_objectSpread","find","elem","userId","App","state","loading","todosWithUsers","getDataFromServer","_callee","url","response","regenerator_default","wrap","_context","prev","next","fetch","concat","sent","abrupt","json","stop","getTodosList","_callee2","_ref3","_ref4","_context2","Promise","all","_this","Object","slicedToArray","loadTodos","_callee3","_context3","setState","t0","t1","t2","call","console","log","prevState","toConsumableArray","sort","b","length","_this$state","this","Fragment","components_TodoList","sortByMail","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.48a5d76c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function User(props) {\n  return (\n    <td>{props.user.email}</td>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.objectOf({ email: PropTypes.string }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nexport default function TodoItems(props) {\n  return (\n    <tr>\n      <td>{props.todo.title}</td>\n      <td className={props.todo.completed ? 'active' : 'non-active'}>\n        {props.todo.completed ? 'true' : 'false'}\n      </td>\n      <User user={props.todo.user} />\n    </tr>\n  );\n}\n\nTodoItems.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  }).isRequired,\n};\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nfunction TodoList(\n  {\n    todos, sortTableBy,\n  }\n) {\n  return (\n    <table align=\"center\">\n      <thead>\n        <tr>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => sortTableBy('title')}\n            >\n              title\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => sortTableBy('completed')}\n            >\n              completed\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => sortTableBy('email')}\n            >\n              email\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          todos.map(item => <TodoItem todo={item} key={item.id} />)\n        }\n      </tbody>\n    </table>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortTableBy: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\n\nimport TodoList from './components/TodoList';\n\nconst BaseUrl = 'https://jsonplaceholder.typicode.com/';\n\nfunction getTodosWithUsers(todos, users) {\n  return todos.map(item => ({\n    ...item,\n    user: users.find(elem => elem.id === item.userId),\n  }));\n}\n\nclass App extends React.Component {\n  state = {\n    loading: false,\n    todosWithUsers: [],\n  };\n\n  getDataFromServer = async(url) => {\n    const response = await fetch(`${BaseUrl}${url}`);\n    return response.json();\n  };\n\n  getTodosList = async() => {\n    const [todos, users] = await Promise.all([\n      this.getDataFromServer('todos'),\n      this.getDataFromServer('users'),\n    ]);\n\n    return getTodosWithUsers(todos, users);\n  };\n\n  loadTodos = async() => {\n    this.setState({\n      loading: true,\n    });\n    this.setState({\n      todosWithUsers: await this.getTodosList(),\n    });\n  }\n\n  sortTableBy = (title) => {\n    console.log();\n    if (title === 'title') {\n      this.setState(prevState => ({\n        todosWithUsers: [...prevState.todosWithUsers].sort(\n          (a, b) => {\n            console.log(b[title]);\n            return b[title].length - a[title].length;\n          }\n        ),\n      }));\n    }\n\n    if (title === 'completed') {\n      this.setState(prevState => ({\n        todosWithUsers: [...prevState.todosWithUsers].sort(\n          (a, b) => {\n            console.log(b[title]);\n            return b[title] - a[title];\n          }\n        ),\n      }));\n    }\n\n    if (title === 'email') {\n      this.setState(prevState => ({\n        todosWithUsers: [...prevState.todosWithUsers].sort(\n          (a, b) => {\n            console.log(b[title]);\n            return b.user[title].length - a.user[title].length;\n          }\n        ),\n      }));\n    }\n  }\n\n  render() {\n    const { todosWithUsers, loading } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1>Dynamic list of todos</h1>\n          {(loading && todosWithUsers.length === 0)\n            && 'loading...'\n          }\n          {(!loading && todosWithUsers.length === 0)\n            && <button type=\"button\" onClick={this.loadTodos}>Download</button>\n          }\n          {todosWithUsers.length !== 0\n            && (\n              <TodoList\n                todos={todosWithUsers}\n                sortTableBy={this.sortTableBy}\n                // sortByStatus={this.sortByStatus}\n                sortByMail={this.sortByMail}\n              />\n            )\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}